# Machine just created, wait until connection available
- name: Wait 600 seconds for target connection to become reachable/usable
  wait_for_connection:
# Cloud init may still be running, and could conflict with commands here
- name: Wait cloud init success
  ansible.builtin.shell:
    cmd: cloud-init status --wait
  register: cinitres
  failed_when: '"status: done" not in cinitres.stdout'
- name: Gathering facts
  setup:
# Setup kernel
- name: Add the br_netfilter module
  community.general.modprobe:
    name: br_netfilter
    state: present
- name: Setup always load br_netfilter
  ansible.builtin.copy:
    dest: "/etc/modules-load.d/k8s.conf"
    content: |
      br_netfilter
- name: Setup IPv6 Bridge
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: '1'
    sysctl_set: yes
- name: Setup IPv4 Bridge
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    sysctl_set: yes
- name: Setup IP Forward
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes
# Setup Dependencies and APT
- name: Install Containerd and Kubeadm Dependencies
  apt: 
    name: "{{ item }}"
    state: latest
    update_cache: yes
    lock_timeout: 600
  loop: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg', 'lsb-release']
- name: Install Longhorn Dependencies
  apt: 
    name: "{{ item }}"
    state: latest
    update_cache: yes
    lock_timeout: 600
  loop: ['open-iscsi', 'nfs-common']
# Setup CRI
- name: Add Docker GPG Key
  apt_key: 
    url: https://download.docker.com/linux/debian/gpg
    state: present
- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/debian bullseye stable
    state: present
- name: Install Docker
  apt: 
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop: ['containerd.io']
- name: Check if containerd is configured
  stat:
    path: /etc/containerd/DONE
  register: containerdconfig
- name: Configure containerd
  shell: |
    containerd config default > /etc/containerd/config.toml
    sed -i -e '/SystemdCgroup =/ s/= .*/= true/' /etc/containerd/config.toml
    systemctl restart containerd
    touch /etc/containerd/DONE
  when: not containerdconfig.stat.exists
# Setup Kubernetes 
- name: Add Kubeadm GPG Key
  apt_key: 
    url: https://pkgs.k8s.io/core:/stable:/{{k8s_version}}/deb/Release.key
    state: present
- name: Add Kubernetes Repository
  apt_repository:
    repo: deb https://pkgs.k8s.io/core:/stable:/{{k8s_version}}/deb/ /
    state: present
- name: Install Kubernetes packages
  apt: 
    name: "{{ item }}"
    state: latest
    update_cache: yes
    lock_timeout: 600
  loop: ['kubelet', 'kubeadm', 'kubectl']
- name: Hold kubeadm
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop: ['kubelet', 'kubeadm', 'kubectl']